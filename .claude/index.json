{
  "projectName": "FalAI 图像生成应用",
  "description": "基于 FAL.AI API 的高级图像生成 SaaS 应用，采用 Vue 3 + TypeScript + Shadcn-Vue 构建",
  "lastScanTime": "2025-10-24T19:01:04+08:00",
  "scanVersion": "1.0.1",
  "rootDocPath": "CLAUDE.md",
  "techStack": {
    "frontend": ["Vue 3.5.13", "TypeScript 5.7.2", "Vite 6.2.0", "Tailwind CSS 4.1.3", "Shadcn-Vue 2.0.1"],
    "backend": ["Vercel Serverless Functions", "Supabase"],
    "storage": ["Vercel Blob", "LocalStorage", "Supabase PostgreSQL"],
    "api": ["FAL.AI SDK @fal-ai/client 1.3.0", "Axios 1.8.4"]
  },
  "modules": [
    {
      "name": "views",
      "path": "src/views",
      "docPath": "src/views/CLAUDE.md",
      "type": "frontend",
      "responsibility": "页面视图层，管理所有路由页面组件",
      "entryPoints": [
        "src/views/Home.vue",
        "src/views/FluxModelPage.vue",
        "src/views/LoginPage.vue",
        "src/views/SignUpPage.vue",
        "src/views/ForgotPasswordPage.vue",
        "src/views/ResetPasswordPage.vue",
        "src/views/SettingsPage.vue",
        "src/views/TradingHallPage.vue"
      ],
      "interfaces": {
        "routes": [
          {"path": "/", "component": "Home.vue"},
          {"path": "/models", "component": "TradingHallPage.vue"},
          {"path": "/models/:modelId", "component": "FluxModelPage.vue"},
          {"path": "/login", "component": "LoginPage.vue"},
          {"path": "/signup", "component": "SignUpPage.vue"},
          {"path": "/settings", "component": "SettingsPage.vue"},
          {"path": "/forgot-password", "component": "ForgotPasswordPage.vue"},
          {"path": "/reset-password", "component": "ResetPasswordPage.vue"}
        ]
      },
      "dependencies": [
        "src/components",
        "src/services/auth.ts",
        "src/lib/models/registry.ts"
      ],
      "fileCount": 8,
      "coverage": "100%",
      "breadcrumb": "[根目录](../../CLAUDE.md) > [src](../) > **views**"
    },
    {
      "name": "components",
      "path": "src/components",
      "docPath": "src/components/CLAUDE.md",
      "type": "frontend",
      "responsibility": "UI 组件层，包括 Shadcn-Vue 基础组件和业务组件",
      "entryPoints": [
        "src/components/ui/",
        "src/components/image-generator/",
        "src/components/Navbar.vue",
        "src/components/NavbarSheet.vue",
        "src/components/UserMenu.vue",
        "src/components/AppLayout.vue",
        "src/components/ImageGenerator.vue",
        "src/components/ApiKeyManager.vue",
        "src/components/ApiKeyInput.vue",
        "src/components/ClearCacheButton.vue"
      ],
      "interfaces": {
        "uiComponents": [
          "Button", "Card", "Dialog", "Input", "Select", "Slider",
          "Textarea", "Avatar", "Badge", "Pagination", "Skeleton", "Sonner",
          "Alert", "AlertDialog", "DropdownMenu", "Form", "Label",
          "NumberField", "RadioGroup", "ScrollArea", "Separator", "Sheet",
          "Switch", "Table", "Tabs", "Tooltip"
        ],
        "businessComponents": [
          "GenerationSettings", "ImageDisplay", "GenerationsGallery",
          "ImageSizeRadioGroup", "DefaultSettingsToolbar",
          "ApiKeyManager", "ApiKeyInput", "ClearCacheButton",
          "Navbar", "NavbarSheet", "UserMenu", "AppLayout", "ImageGenerator"
        ]
      },
      "dependencies": [
        "reka-ui 2.2.0",
        "lucide-vue-next 0.487.0",
        "tailwind-merge 3.2.0",
        "class-variance-authority 0.7.1"
      ],
      "fileCount": 140,
      "vueComponentCount": 136,
      "coverage": "100%",
      "breadcrumb": "[根目录](../../CLAUDE.md) > [src](../) > **components**"
    },
    {
      "name": "services",
      "path": "src/services",
      "docPath": "src/services/CLAUDE.md",
      "type": "backend",
      "responsibility": "业务服务层，封装认证、API 密钥管理、图像生成等核心逻辑",
      "entryPoints": [
        "src/services/auth.ts",
        "src/services/api-key-manager.ts",
        "src/services/generate-image.ts"
      ],
      "interfaces": {
        "auth": {
          "functions": [
            "signUp(email, password)",
            "signIn(email, password)",
            "signOut()",
            "getCurrentUser()",
            "resetPassword(email)",
            "updatePassword(newPassword)",
            "changePassword(email, oldPassword, newPassword)",
            "updateEmail(newEmail)",
            "deleteAccount()"
          ]
        },
        "apiKeyManager": {
          "functions": [
            "getAllApiKeys()",
            "getActiveKeyIndex()",
            "setActiveKey(index)",
            "configureFalClient(apiKey)",
            "markKeyAsInvalid(index, reason)",
            "switchToNextValidKey()",
            "handleBalanceExhaustedError()",
            "loadApiKeysFromBlob()",
            "initializeApiKeys()"
          ]
        },
        "generateImage": {
          "functions": [
            "generateImage(model, input, apiKey)"
          ]
        }
      },
      "dependencies": [
        "@supabase/supabase-js 2.49.4",
        "@fal-ai/client 1.3.0",
        "vue-sonner 1.3.0"
      ],
      "fileCount": 3,
      "coverage": "100%",
      "breadcrumb": "[根目录](../../CLAUDE.md) > [src](../) > **services**"
    },
    {
      "name": "lib",
      "path": "src/lib",
      "docPath": "src/lib/CLAUDE.md",
      "type": "utilities",
      "responsibility": "工具库层，提供 Supabase 客户端、工具函数、模型注册表",
      "entryPoints": [
        "src/lib/supabase.ts",
        "src/lib/utils.ts",
        "src/lib/models/registry.ts",
        "src/lib/types.ts"
      ],
      "interfaces": {
        "exports": [
          "supabase (SupabaseClient)",
          "isSupabaseEnabled (boolean)",
          "getUserId() → string",
          "currentUserId (string)",
          "isCurrentUserRecord(userId) → boolean",
          "cn(...inputs) → string",
          "allModels (Model[])"
        ]
      },
      "dependencies": [
        "@supabase/supabase-js 2.49.4",
        "uuid 11.1.0",
        "clsx 2.1.1",
        "tailwind-merge 3.2.0"
      ],
      "fileCount": 5,
      "coverage": "100%",
      "breadcrumb": "[根目录](../../CLAUDE.md) > [src](../) > **lib**"
    },
    {
      "name": "router",
      "path": "src/router",
      "docPath": "src/router/CLAUDE.md",
      "type": "routing",
      "responsibility": "路由配置，管理静态路由和动态模型路由",
      "entryPoints": [
        "src/router/index.ts",
        "src/router/models.ts"
      ],
      "interfaces": {
        "staticRoutes": [
          "/", "/models", "/login", "/signup", "/settings",
          "/forgot-password", "/reset-password"
        ],
        "dynamicRoutes": [
          "/models/:modelId (基于 lib/models/registry.ts 生成)"
        ]
      },
      "dependencies": [
        "vue-router 4.5.0",
        "src/lib/models/registry.ts"
      ],
      "fileCount": 2,
      "coverage": "100%",
      "breadcrumb": "[根目录](../../CLAUDE.md) > [src](../) > **router**"
    },
    {
      "name": "api",
      "path": "api",
      "docPath": "api/CLAUDE.md",
      "type": "serverless",
      "responsibility": "Vercel Serverless 函数，处理服务端逻辑",
      "entryPoints": [
        "api/blob-keys.js"
      ],
      "interfaces": {
        "endpoints": [
          {
            "path": "/api/blob-keys",
            "method": "GET",
            "description": "从 Vercel Blob 获取 API 密钥列表",
            "response": {
              "keys": [
                {
                  "key": "string",
                  "name": "string",
                  "isSystem": "boolean",
                  "group": "string"
                }
              ]
            }
          }
        ]
      },
      "dependencies": [
        "@vercel/blob 1.1.1"
      ],
      "environmentVariables": [
        "BLOB_READ_WRITE_TOKEN (服务端)"
      ],
      "fileCount": 1,
      "coverage": "100%",
      "breadcrumb": "[根目录](../CLAUDE.md) > **api**"
    },
    {
      "name": "types",
      "path": "src/types",
      "docPath": "src/types/CLAUDE.md",
      "type": "types",
      "responsibility": "TypeScript 类型定义",
      "entryPoints": [
        "src/types/flux.ts"
      ],
      "interfaces": {
        "types": [
          "Model",
          "GenerateImageResponse",
          "GenerationSettings",
          "GeneratedImage"
        ]
      },
      "fileCount": 1,
      "coverage": "100%",
      "breadcrumb": "[根目录](../../CLAUDE.md) > [src](../) > **types**"
    },
    {
      "name": "composables",
      "path": "src/composables",
      "docPath": "src/composables/CLAUDE.md",
      "type": "utilities",
      "responsibility": "Vue 组合式函数",
      "entryPoints": [
        "src/composables/useDebounce.ts"
      ],
      "interfaces": {
        "composables": [
          "useDebounce(value, delay)"
        ]
      },
      "fileCount": 1,
      "coverage": "100%",
      "breadcrumb": "[根目录](../../CLAUDE.md) > [src](../) > **composables**"
    }
  ],
  "environmentVariables": {
    "frontend": [
      "VITE_FAL_API_KEYS",
      "VITE_SUPABASE_URL",
      "VITE_SUPABASE_ANON_KEY"
    ],
    "backend": [
      "BLOB_READ_WRITE_TOKEN"
    ]
  },
  "buildConfig": {
    "buildCommand": "chmod +x ./vercel-build.sh && ./vercel-build.sh",
    "outputDirectory": "dist",
    "framework": "vite",
    "platform": "Vercel"
  },
  "statistics": {
    "totalFiles": 200,
    "scannedFiles": 161,
    "vueComponents": 136,
    "typeScriptFiles": 45,
    "serverlessFunctions": 1,
    "modules": 8,
    "coverageRate": "100%",
    "scanMode": "完整扫描（Full Scan）",
    "scanPhases": {
      "phaseA": "全仓清点（已完成）",
      "phaseB": "模块优先扫描（已完成）",
      "phaseC": "深度补捞（未触发，模块覆盖率已达100%）"
    }
  },
  "gaps": [],
  "ignored": {
    "rules": [
      "node_modules/**",
      ".git/**",
      ".github/**",
      "dist/**",
      "dist-ssr/**",
      "build/**",
      ".next/**",
      "__pycache__/**",
      "*.lock",
      "*.log",
      "*.local",
      "*.bin",
      "*.pdf",
      "*.png",
      "*.jpg",
      "*.jpeg",
      "*.gif",
      "*.mp4",
      "*.zip",
      "*.tar",
      "*.gz"
    ],
    "topIgnoredDirs": [
      "node_modules/",
      ".git/",
      "dist/",
      ".vscode/",
      ".idea/"
    ]
  },
  "nextSteps": [
    "✅ 已生成 Mermaid 模块结构图（包含可点击链接）",
    "✅ 已为 8 个模块添加导航面包屑",
    "建议添加自动化测试（Vitest + Vue Test Utils）",
    "建议配置 E2E 测试（Playwright）",
    "建议添加 Storybook 用于组件文档和视觉回归测试",
    "建议配置 ESLint 和 Prettier 代码规范",
    "建议添加 CI/CD 流程（GitHub Actions）",
    "建议补充 API 文档（OpenAPI/Swagger）",
    "建议添加性能监控（Vercel Analytics）",
    "建议考虑将 TradingHallPage.vue 重命名为 ModelsPage.vue",
    "建议在 router 中添加认证守卫（requiresAuth meta）",
    "建议配置生产环境 CORS 策略（限制 Access-Control-Allow-Origin）"
  ],
  "relatedDocs": [
    "README.md",
    "TECH_STACK.md",
    "SUPABASE_SETUP.md",
    "CHANGELOG.md",
    ".env.example"
  ],
  "mermaidDiagramGenerated": true,
  "breadcrumbsAdded": true,
  "truncated": false,
  "scanCompleted": true
}
